
//此源码被清华学神尹成大魔王专业翻译分析并修改
//尹成QQ77025077
//尹成微信18510341407
//尹成所在QQ群721929980
//尹成邮箱 yinc13@mails.tsinghua.edu.cn
//尹成毕业于清华大学,微软区块链领域全球最有价值专家
//https://mvp.microsoft.com/zh-cn/PublicProfile/4033620
//版权所有（c）2014 BTCSuite开发者
//此源代码的使用由ISC控制
//可以在许可文件中找到的许可证。

/*
包walletdb为btcwallet提供命名空间数据库接口。



钱包基本上由大量存储的数据组成，如私人
和公钥、密钥派生位、付费脚本哈希脚本以及各种
元数据。许多钱包的问题之一是它们是紧密集成的。
设计一个带有松散耦合组件的钱包，提供特定的
功能是理想的，但是它在数据方面提出了挑战
存储，因为每个组件需要在不知道
其他组件的内部或破坏原子性。

这个包通过提供一个可插入的驱动程序来解决这个问题，名称空间
主钱包守护进程要使用的数据库接口。这个
允许使用合适的驱动程序使用任何后端数据库类型。各
组件通常是一个包，然后可以实现
地址管理、投票池和彩色硬币等功能
元数据在自己的命名空间中，不必担心与
其他包，即使它们共享由
钱包。

WalletDB提供的功能概述如下：

 -密钥/值存储
 -命名空间支持
 -允许多个包在数据库中有自己的区域，而不需要
   担心冲突
 -具有手动和管理模式的只读和读写事务
 -嵌套存储桶
 -支持注册后端数据库
 -全面的测试覆盖

数据库

主要入口点是DB接口。它公开了
创建、检索和删除命名空间。通过创建获取
以及打开函数，这些函数采用数据库类型字符串来标识
要使用的特定数据库驱动程序（后端）以及特定于
指定的驱动程序。

命名空间

名称空间接口是一个抽象，它为获取
作为所有数据库读取和
写。与一些支持读写的数据库接口不同
如果没有事务，即使只有在
读或写一个键。

当视图和更新
函数提供托管事务。更详细地描述了这些
下面。

交易

Tx接口提供了回滚或提交
在事务处于活动状态时发生。它还提供了根桶
其中存储所有键、值和嵌套存储桶。交易
可以是只读的，也可以是读写的，可以是托管的，也可以是非托管的。

托管与非托管事务

托管事务是调用方提供要执行的函数的事务。
在事务上下文中处理提交或回滚
根据所提供的函数是否返回
错误。尝试在托管的上手动调用回滚或提交
交易将导致恐慌。

另一方面，非托管事务要求调用方手动
完成后调用commit或rollback。离开交易记录
长时间开放可能会产生一些不利影响，因此
建议改用托管事务。

桶

Bucket接口提供了操作键/值对和
嵌套的bucket以及循环访问它们。

get、put和delete函数与key/value对一起工作，而bucket，
CreateBack、CreateBacketifNotexists和DeleteBack函数使用
桶。foreach函数允许调用方提供
用当前bucket中的每个键/值对和嵌套bucket调用。

根桶

如上所述，所有用于操作键/值的函数
在bucket接口上存在对和嵌套bucket。根桶是
命名空间中存储数据并在其下创建数据的最上层存储桶
与命名空间的时间相同。在Tx接口上使用rootbucket函数
检索它。

嵌套桶

在bucket接口上，createBucketifNotexists和createBucketifNotexists函数
提供创建任意数量嵌套存储桶的能力。它是
一个好主意是避免使用大量存储桶，因为这些存储桶中的数据可能会导致
取决于所使用的特定驱动程序的页面利用率差。
**/

package walletdb
